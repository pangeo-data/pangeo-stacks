name: PullRequestBuild

on:
  pull_request:
    branches:
      - master

env:
  GITHUB_REF: ${{ github.ref }}
  GITHUB_SHA: ${{ github.sha }}
  IMAGE_PREFIX: pangeo/

jobs:
  base-image:
    env:
      IMAGE: base-notebook
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Set Job Environment Variables
      run: |
        CALVER="$( date -u '+%Y.%m.%d' )"
        SHA="$( git rev-parse --short ${GITHUB_SHA} )"
        DOCKER_TAG="${CALVER}-${SHA}"
        IMAGE_SPEC="${IMAGE_PREFIX}${IMAGE}:${DOCKER_TAG}"
        ONBUILD_IMAGE_SPEC=${IMAGE_PREFIX}${IMAGE}-onbuild:${DOCKER_TAG}
        echo "::set-env name=IMAGE_SPEC::${IMAGE_SPEC}"
        echo "::set-env name=ONBUILD_IMAGE_SPEC::${ONBUILD_IMAGE_SPEC}"
    - name: Set Up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Enable Pip Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python --version
        pip install -r requirements.txt
        repo2docker --version
        docker version
    - name: Build Image
      run: |
        python3 build.py --image-prefix=${IMAGE_PREFIX} ${IMAGE}
    - name: Test Image
      run: |
        docker run ${IMAGE_SPEC} binder/verify
        docker run ${ONBUILD_IMAGE_SPEC} binder/verify
    - name: Save Docker Image
      run: |
        docker save ${ONBUILD_IMAGE_SPEC} | gzip > base-image.tar.gz
        docker run ${ONBUILD_IMAGE_SPEC} conda list > conda-packages.txt
    - name: Archive Conda Package List
      uses: actions/upload-artifact@v1
      with:
        name: conda-packages
        path: conda-packages.txt
    - name: Upload Base-Notebook Image
      uses: actions/upload-artifact@v1
      with:
        name: base-image
        path: base-image.tar.gz

  onbuild-images:
    needs: base-image
    strategy:
      fail-fast: false
      matrix:
        IMAGE: [pangeo-notebook, pangeo-esip]
    name: ${{ matrix.IMAGE }}
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Set Job Environment Variables
      run: |
        CALVER="$( date -u '+%Y.%m.%d' )"
        SHA="$( git rev-parse --short ${GITHUB_SHA} )"
        DOCKER_TAG="${CALVER}-${SHA}"
        IMAGE_SPEC="${IMAGE_PREFIX}${{ matrix.IMAGE }}:${DOCKER_TAG}"
        echo "::set-env name=IMAGE_SPEC::${IMAGE_SPEC}"
    - name: Download Base-Noteook Docker Image
      uses: actions/download-artifact@v1
      with:
        name: base-image
        path: ./artifact
    - name: Load Docker Image
      run: |
        ls -l *
        docker load < ./artifact/base-image.tar.gz
        docker images
    - name: Set Up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Enable Pip Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Dependencies
      run: |
        python --version
        pip install -r requirements.txt
        repo2docker --version
        docker version
    - name: Build Image
      run: |
        python3 build.py --image-prefix=${IMAGE_PREFIX} ${{ matrix.IMAGE }}
    - name: Test Image
      run: |
        docker run ${IMAGE_SPEC} binder/verify
        docker run ${IMAGE_SPEC} conda list > conda-packages/packages.txt
    - name: Archive Conda Package List
      uses: actions/upload-artifact@v1
      with:
        name: conda-packages
        path: conda-packages.txt
      # NOTE: test onbuild images as well?
      # NOTE: Add cleanup step to delete artifacts / upload to public location?
